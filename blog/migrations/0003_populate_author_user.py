# Generated by Django 5.2.4 on 2025-07-09 13:30

from django.db import migrations

def populate_authors(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Comment = apps.get_model('blog', 'Comment')
    
    # Get a fallback user (e.g., the first superuser) for comments whose author text doesn't match any user.
    fallback_user = User.objects.filter(is_superuser=True).order_by('pk').first()
    if not fallback_user:
        # If no superuser exists, you might need to create one or handle this case differently.
        # For this script, we'll raise an error if no suitable fallback user is found.
        raise Exception("No superuser found to assign orphaned comments to. Please create a superuser.")

    for comment in Comment.objects.filter(author_user__isnull=True):
        # Try to find a user with a username matching the author string
        user = User.objects.filter(username=comment.author).first()
        
        if user:
            comment.author_user = user
        else:
            # If no matching user is found, assign the fallback user
            comment.author_user = fallback_user
        
        comment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0002_comment_author_user'),
    ]

    operations = [
        migrations.RunPython(populate_authors),
    ]